{"ast":null,"code":"// src/services/newsService.js\nimport apiClient, { createFileUploadConfig } from './apiClient';\nimport toast from 'react-hot-toast'; // <-- THÊM DÒNG NÀY\n\n// API_BASE_PATH sẽ được nối với baseURL từ apiClient.js\n// Nếu API_BASE_URL trong apiClient.js đã là 'http://localhost:8080/api/v1',\n// thì đường dẫn cho news sẽ là /news.\n// Tôi sẽ để API_BASE_PATH là '/news' để nó nối vào baseURL của apiClient.\nconst API_BASE_PATH = '/news'; // <-- SỬA LẠI ĐƯỜNG DẪN GỐC CỦA RESOURCE NEWS\n\nexport const newsService = {\n  // <-- SỬA TỪ \"export default\" SANG \"export const\"\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      const response = await apiClient.get(API_BASE_PATH);\n      // Backend của bạn trả về một mảng trực tiếp, nên không cần .data.result hay .data.content\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(\"Error fetching all news:\", error);\n      toast.error(error.errorMessage || 'Lỗi khi tải danh sách tin tức.'); // Thêm toast lỗi\n      throw error;\n    }\n  },\n  // Get news by ID\n  getNewsById: async id => {\n    try {\n      const response = await apiClient.get(`${API_BASE_PATH}/${id}`);\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      toast.error(error.errorMessage || `Lỗi khi tải bài viết ID ${id}.`); // Thêm toast lỗi\n      throw error;\n    }\n  },\n  // Create a news article\n  createNews: async newsData => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData);\n      toast.success('Bài viết đã được tạo thành công.'); // Thêm toast thành công\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      toast.error(error.errorMessage || 'Lỗi khi tạo bài viết.'); // Thêm toast lỗi\n      throw error;\n    }\n  },\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\n      toast.success('Bài viết đã được cập nhật thành công.'); // Thêm toast thành công\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      toast.error(error.errorMessage || `Lỗi khi cập nhật bài viết ID ${id}.`); // Thêm toast lỗi\n      throw error;\n    }\n  },\n  // Delete a news article\n  deleteNews: async id => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\n      toast.success('Bài viết đã được xóa thành công.'); // Thêm toast thành công\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      toast.error(error.errorMessage || `Lỗi khi xóa bài viết ID ${id}.`); // Thêm toast lỗi\n      throw error;\n    }\n  },\n  // Upload attachments for an existing news article\n  uploadNewsAttachments: async (newsId, file, onUploadProgress) => {\n    console.log(`[newsService] Uploading attachment for news ID ${newsId}, file:`, file.name);\n    try {\n      const formData = new FormData();\n      // Đảm bảo tên trường là 'file' hoặc 'files' tùy theo Backend yêu cầu.\n      // Dựa vào file bạn cung cấp, bạn đang dùng 'files' trong formData.append.\n      // Tôi sẽ giữ 'files' ở đây, nhưng nếu Backend của bạn chỉ chấp nhận 1 file với tên 'file',\n      // bạn cần đổi lại là 'file'.\n      formData.append('files', file);\n      const config = createFileUploadConfig(onUploadProgress);\n      // Endpoint bạn cung cấp là `/news/uploads/{newsId}`.\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(`Error uploading attachment for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n  // Delete a specific attachment\n  deleteNewsAttachment: async attachmentId => {\n    // <-- THÊM HÀM NÀY\n    console.log(`[newsService] Deleting attachment ID ${attachmentId}`);\n    try {\n      // Endpoint để xóa attachment. Phổ biến là /attachments/{id}\n      // hoặc /news/{newsId}/attachments/{attachmentId}.\n      // Tôi giả định Backend có endpoint /attachments/{id} để xóa một attachment riêng lẻ.\n      const response = await apiClient.delete(`/attachments/${attachmentId}`); // <-- ĐIỀU CHỈNH ENDPOINT NÀY NẾU CẦN\n      toast.success('Ảnh đã được xóa thành công.');\n      return response;\n    } catch (error) {\n      console.error(`Error deleting attachment ID ${attachmentId}:`, error);\n      toast.error(error.errorMessage || `Lỗi khi xóa ảnh ID ${attachmentId}.`);\n      throw error;\n    }\n  },\n  // Get image URL\n  getImageUrl: imageName => {\n    if (!imageName) {\n      return 'https://via.placeholder.com/400x200?text=No+Image'; // Placeholder if no image name\n    }\n    // API_BASE_URL từ apiClient.js đã là 'http://localhost:8080/api/v1'\n    // và đường dẫn ảnh thường là /report/image/{imageName} hoặc /news/image/{imageName}\n    // Dựa vào code của bạn, bạn đang dùng `${API_BASE_PATH}/image/${imageName}`\n    // Nếu API_BASE_PATH là '/news', thì URL sẽ là /api/v1/news/image/{imageName}\n    // Nếu Backend của bạn có endpoint ảnh riêng (vd: /api/v1/report/image/), thì cần điều chỉnh.\n    // Tôi sẽ giữ theo cấu trúc bạn đang dùng:\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n    return `${baseURL}${API_BASE_PATH}/image/${encodeURIComponent(imageName)}`;\n  }\n};","map":{"version":3,"names":["apiClient","createFileUploadConfig","toast","API_BASE_PATH","newsService","getAllNews","response","get","error","console","errorMessage","getNewsById","id","createNews","newsData","post","success","updateNews","put","deleteNews","delete","uploadNewsAttachments","newsId","file","onUploadProgress","log","name","formData","FormData","append","config","deleteNewsAttachment","attachmentId","getImageUrl","imageName","baseURL","process","env","REACT_APP_API_URL","encodeURIComponent"],"sources":["/Users/lucas/Desktop/an/fe-edu/src/services/newsService.js"],"sourcesContent":["// src/services/newsService.js\nimport apiClient, { createFileUploadConfig } from './apiClient';\nimport toast from 'react-hot-toast'; // <-- THÊM DÒNG NÀY\n\n// API_BASE_PATH sẽ được nối với baseURL từ apiClient.js\n// Nếu API_BASE_URL trong apiClient.js đã là 'http://localhost:8080/api/v1',\n// thì đường dẫn cho news sẽ là /news.\n// Tôi sẽ để API_BASE_PATH là '/news' để nó nối vào baseURL của apiClient.\nconst API_BASE_PATH = '/news'; // <-- SỬA LẠI ĐƯỜNG DẪN GỐC CỦA RESOURCE NEWS\n\nexport const newsService = { // <-- SỬA TỪ \"export default\" SANG \"export const\"\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      const response = await apiClient.get(API_BASE_PATH);\n      // Backend của bạn trả về một mảng trực tiếp, nên không cần .data.result hay .data.content\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(\"Error fetching all news:\", error);\n      toast.error(error.errorMessage || 'Lỗi khi tải danh sách tin tức.'); // Thêm toast lỗi\n      throw error;\n    }\n  },\n\n  // Get news by ID\n  getNewsById: async (id) => {\n    try {\n      const response = await apiClient.get(`${API_BASE_PATH}/${id}`);\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      toast.error(error.errorMessage || `Lỗi khi tải bài viết ID ${id}.`); // Thêm toast lỗi\n      throw error;\n    }\n  },\n\n  // Create a news article\n  createNews: async (newsData) => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData);\n      toast.success('Bài viết đã được tạo thành công.'); // Thêm toast thành công\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      toast.error(error.errorMessage || 'Lỗi khi tạo bài viết.'); // Thêm toast lỗi\n      throw error;\n    }\n  },\n\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\n      toast.success('Bài viết đã được cập nhật thành công.'); // Thêm toast thành công\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      toast.error(error.errorMessage || `Lỗi khi cập nhật bài viết ID ${id}.`); // Thêm toast lỗi\n      throw error;\n    }\n  },\n\n  // Delete a news article\n  deleteNews: async (id) => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\n      toast.success('Bài viết đã được xóa thành công.'); // Thêm toast thành công\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      toast.error(error.errorMessage || `Lỗi khi xóa bài viết ID ${id}.`); // Thêm toast lỗi\n      throw error;\n    }\n  },\n\n  // Upload attachments for an existing news article\n  uploadNewsAttachments: async (newsId, file, onUploadProgress) => {\n    console.log(`[newsService] Uploading attachment for news ID ${newsId}, file:`, file.name);\n    try {\n      const formData = new FormData();\n      // Đảm bảo tên trường là 'file' hoặc 'files' tùy theo Backend yêu cầu.\n      // Dựa vào file bạn cung cấp, bạn đang dùng 'files' trong formData.append.\n      // Tôi sẽ giữ 'files' ở đây, nhưng nếu Backend của bạn chỉ chấp nhận 1 file với tên 'file',\n      // bạn cần đổi lại là 'file'.\n      formData.append('files', file); \n\n      const config = createFileUploadConfig(onUploadProgress);\n      // Endpoint bạn cung cấp là `/news/uploads/{newsId}`.\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\n      return response; // apiClient đã trả về response.data rồi\n    } catch (error) {\n      console.error(`Error uploading attachment for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n\n  // Delete a specific attachment\n  deleteNewsAttachment: async (attachmentId) => { // <-- THÊM HÀM NÀY\n    console.log(`[newsService] Deleting attachment ID ${attachmentId}`);\n    try {\n      // Endpoint để xóa attachment. Phổ biến là /attachments/{id}\n      // hoặc /news/{newsId}/attachments/{attachmentId}.\n      // Tôi giả định Backend có endpoint /attachments/{id} để xóa một attachment riêng lẻ.\n      const response = await apiClient.delete(`/attachments/${attachmentId}`); // <-- ĐIỀU CHỈNH ENDPOINT NÀY NẾU CẦN\n      toast.success('Ảnh đã được xóa thành công.');\n      return response;\n    } catch (error) {\n      console.error(`Error deleting attachment ID ${attachmentId}:`, error);\n      toast.error(error.errorMessage || `Lỗi khi xóa ảnh ID ${attachmentId}.`);\n      throw error;\n    }\n  },\n\n  // Get image URL\n  getImageUrl: (imageName) => {\n    if (!imageName) {\n      return 'https://via.placeholder.com/400x200?text=No+Image'; // Placeholder if no image name\n    }\n    // API_BASE_URL từ apiClient.js đã là 'http://localhost:8080/api/v1'\n    // và đường dẫn ảnh thường là /report/image/{imageName} hoặc /news/image/{imageName}\n    // Dựa vào code của bạn, bạn đang dùng `${API_BASE_PATH}/image/${imageName}`\n    // Nếu API_BASE_PATH là '/news', thì URL sẽ là /api/v1/news/image/{imageName}\n    // Nếu Backend của bạn có endpoint ảnh riêng (vd: /api/v1/report/image/), thì cần điều chỉnh.\n    // Tôi sẽ giữ theo cấu trúc bạn đang dùng:\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n    return `${baseURL}${API_BASE_PATH}/image/${encodeURIComponent(imageName)}`;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}