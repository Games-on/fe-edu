{"ast":null,"code":"// src/services/newsService.js\nimport apiClient from './apiClient';\nconst API_BASE_PATH = '/api/v1/news';\nconst newsService = {\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      const response = await apiClient.get(API_BASE_PATH);\n      // Thay đổi: Luôn trả về response.data để nhất quán.\n      // Nếu API trả về một List<News> trực tiếp, response.data sẽ là List<News>.\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching all news:\", error);\n      throw error;\n    }\n  },\n  // Get news by ID\n  getNewsById: async id => {\n    try {\n      const response = await apiClient.get(`${API_BASE_PATH}/${id}`);\n      // Thay đổi: Luôn trả về response.data.\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  createNews: async newsData => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData);\n      // Thay đổi: Luôn trả về response.data.\n      // Trước đó bạn có `return response.data || response;`, điều này có thể gây ra sự không nhất quán.\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      throw error;\n    }\n  },\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\n      // Thay đổi: Luôn trả về response.data.\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Delete a news article\n  deleteNews: async id => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\n      // Thay đổi: Luôn trả về response.data. Backend của bạn trả về Map<String, String>\n      // nên response.data sẽ là Map đó.\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  uploadNewsAttachments: async (newsId, files, onUploadProgress) => {\n    // files là một MẢNG\n    try {\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append('files', file);\n      });\n      const config = {};\n      if (onUploadProgress) {\n        config.onUploadProgress = onUploadProgress;\n      }\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\n      return response.data; // Trả về response.data\n    } catch (error) {\n      console.error(`Error uploading attachments for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n  getImageUrl: imageName => {\n    // Đảm bảo process.env.REACT_APP_API_URL được cấu hình trong .env file của bạn\n    // Ví dụ: REACT_APP_API_URL=http://localhost:8080\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\n  }\n};\nexport default newsService;","map":{"version":3,"names":["apiClient","API_BASE_PATH","newsService","getAllNews","response","get","data","error","console","getNewsById","id","createNews","newsData","post","updateNews","put","deleteNews","delete","uploadNewsAttachments","newsId","files","onUploadProgress","formData","FormData","forEach","file","append","config","getImageUrl","imageName","process","env","REACT_APP_API_URL"],"sources":["/Users/lucas/Desktop/an/fe-edu/src/services/newsService.js"],"sourcesContent":["// src/services/newsService.js\nimport apiClient from './apiClient';\n\nconst API_BASE_PATH = '/api/v1/news';\n\nconst newsService = {\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      const response = await apiClient.get(API_BASE_PATH);\n      // Thay đổi: Luôn trả về response.data để nhất quán.\n      // Nếu API trả về một List<News> trực tiếp, response.data sẽ là List<News>.\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching all news:\", error);\n      throw error;\n    }\n  },\n\n  // Get news by ID\n  getNewsById: async (id) => {\n    try {\n      const response = await apiClient.get(`${API_BASE_PATH}/${id}`);\n      // Thay đổi: Luôn trả về response.data.\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  createNews: async (newsData) => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData);\n      // Thay đổi: Luôn trả về response.data.\n      // Trước đó bạn có `return response.data || response;`, điều này có thể gây ra sự không nhất quán.\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      throw error;\n    }\n  },\n\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\n      // Thay đổi: Luôn trả về response.data.\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Delete a news article\n  deleteNews: async (id) => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\n      // Thay đổi: Luôn trả về response.data. Backend của bạn trả về Map<String, String>\n      // nên response.data sẽ là Map đó.\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  uploadNewsAttachments: async (newsId, files, onUploadProgress) => { // files là một MẢNG\n    try {\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append('files', file);\n      });\n\n      const config = {};\n      if (onUploadProgress) {\n        config.onUploadProgress = onUploadProgress;\n      }\n\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\n      return response.data; // Trả về response.data\n    } catch (error) {\n      console.error(`Error uploading attachments for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n\n  getImageUrl: (imageName) => {\n    // Đảm bảo process.env.REACT_APP_API_URL được cấu hình trong .env file của bạn\n    // Ví dụ: REACT_APP_API_URL=http://localhost:8080\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\n  }\n};\n\nexport default newsService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}