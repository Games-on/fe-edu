{"ast":null,"code":"import { format, parseISO } from 'date-fns';\nexport const formatDate = dateString => {\n  if (!dateString) return '';\n  try {\n    const date = typeof dateString === 'string' ? parseISO(dateString) : dateString;\n    return format(date, 'MMM dd, yyyy');\n  } catch (error) {\n    return dateString;\n  }\n};\nexport const formatDateTime = dateString => {\n  if (!dateString) return '';\n  try {\n    const date = typeof dateString === 'string' ? parseISO(dateString) : dateString;\n    return format(date, 'MMM dd, yyyy HH:mm');\n  } catch (error) {\n    return dateString;\n  }\n};\nexport const capitalizeFirst = str => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\nexport const truncateText = (text, maxLength = 100) => {\n  if (!text) return '';\n  return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n};\nexport const generateColor = index => {\n  const colors = ['bg-red-500', 'bg-blue-500', 'bg-green-500', 'bg-yellow-500', 'bg-purple-500', 'bg-pink-500', 'bg-indigo-500', 'bg-orange-500'];\n  return colors[index % colors.length];\n};\nexport const getStatusColor = status => {\n  const statusColors = {\n    'UPCOMING': 'bg-blue-100 text-blue-800',\n    'ONGOING': 'bg-green-100 text-green-800',\n    'COMPLETED': 'bg-gray-100 text-gray-800',\n    'CANCELLED': 'bg-red-100 text-red-800',\n    'PENDING': 'bg-yellow-100 text-yellow-800',\n    'APPROVED': 'bg-green-100 text-green-800',\n    'REJECTED': 'bg-red-100 text-red-800'\n  };\n  return statusColors[status] || 'bg-gray-100 text-gray-800';\n};","map":{"version":3,"names":["format","parseISO","formatDate","dateString","date","error","formatDateTime","capitalizeFirst","str","charAt","toUpperCase","slice","toLowerCase","truncateText","text","maxLength","length","substring","generateColor","index","colors","getStatusColor","status","statusColors"],"sources":["/Users/lucas/Desktop/an/fe-edu/src/utils/helpers.js"],"sourcesContent":["import { format, parseISO } from 'date-fns';\n\nexport const formatDate = (dateString) => {\n  if (!dateString) return '';\n  \n  try {\n    const date = typeof dateString === 'string' ? parseISO(dateString) : dateString;\n    return format(date, 'MMM dd, yyyy');\n  } catch (error) {\n    return dateString;\n  }\n};\n\nexport const formatDateTime = (dateString) => {\n  if (!dateString) return '';\n  \n  try {\n    const date = typeof dateString === 'string' ? parseISO(dateString) : dateString;\n    return format(date, 'MMM dd, yyyy HH:mm');\n  } catch (error) {\n    return dateString;\n  }\n};\n\nexport const capitalizeFirst = (str) => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nexport const truncateText = (text, maxLength = 100) => {\n  if (!text) return '';\n  return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n};\n\nexport const generateColor = (index) => {\n  const colors = [\n    'bg-red-500',\n    'bg-blue-500',\n    'bg-green-500',\n    'bg-yellow-500',\n    'bg-purple-500',\n    'bg-pink-500',\n    'bg-indigo-500',\n    'bg-orange-500',\n  ];\n  return colors[index % colors.length];\n};\n\nexport const getStatusColor = (status) => {\n  const statusColors = {\n    'UPCOMING': 'bg-blue-100 text-blue-800',\n    'ONGOING': 'bg-green-100 text-green-800',\n    'COMPLETED': 'bg-gray-100 text-gray-800',\n    'CANCELLED': 'bg-red-100 text-red-800',\n    'PENDING': 'bg-yellow-100 text-yellow-800',\n    'APPROVED': 'bg-green-100 text-green-800',\n    'REJECTED': 'bg-red-100 text-red-800',\n  };\n  return statusColors[status] || 'bg-gray-100 text-gray-800';\n};"],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,UAAU;AAE3C,OAAO,MAAMC,UAAU,GAAIC,UAAU,IAAK;EACxC,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;EAE1B,IAAI;IACF,MAAMC,IAAI,GAAG,OAAOD,UAAU,KAAK,QAAQ,GAAGF,QAAQ,CAACE,UAAU,CAAC,GAAGA,UAAU;IAC/E,OAAOH,MAAM,CAACI,IAAI,EAAE,cAAc,CAAC;EACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOF,UAAU;EACnB;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAIH,UAAU,IAAK;EAC5C,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;EAE1B,IAAI;IACF,MAAMC,IAAI,GAAG,OAAOD,UAAU,KAAK,QAAQ,GAAGF,QAAQ,CAACE,UAAU,CAAC,GAAGA,UAAU;IAC/E,OAAOH,MAAM,CAACI,IAAI,EAAE,oBAAoB,CAAC;EAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOF,UAAU;EACnB;AACF,CAAC;AAED,OAAO,MAAMI,eAAe,GAAIC,GAAG,IAAK;EACtC,IAAI,CAACA,GAAG,EAAE,OAAO,EAAE;EACnB,OAAOA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;AACjE,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,SAAS,GAAG,GAAG,KAAK;EACrD,IAAI,CAACD,IAAI,EAAE,OAAO,EAAE;EACpB,OAAOA,IAAI,CAACE,MAAM,GAAGD,SAAS,GAAGD,IAAI,CAACG,SAAS,CAAC,CAAC,EAAEF,SAAS,CAAC,GAAG,KAAK,GAAGD,IAAI;AAC9E,CAAC;AAED,OAAO,MAAMI,aAAa,GAAIC,KAAK,IAAK;EACtC,MAAMC,MAAM,GAAG,CACb,YAAY,EACZ,aAAa,EACb,cAAc,EACd,eAAe,EACf,eAAe,EACf,aAAa,EACb,eAAe,EACf,eAAe,CAChB;EACD,OAAOA,MAAM,CAACD,KAAK,GAAGC,MAAM,CAACJ,MAAM,CAAC;AACtC,CAAC;AAED,OAAO,MAAMK,cAAc,GAAIC,MAAM,IAAK;EACxC,MAAMC,YAAY,GAAG;IACnB,UAAU,EAAE,2BAA2B;IACvC,SAAS,EAAE,6BAA6B;IACxC,WAAW,EAAE,2BAA2B;IACxC,WAAW,EAAE,yBAAyB;IACtC,SAAS,EAAE,+BAA+B;IAC1C,UAAU,EAAE,6BAA6B;IACzC,UAAU,EAAE;EACd,CAAC;EACD,OAAOA,YAAY,CAACD,MAAM,CAAC,IAAI,2BAA2B;AAC5D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}