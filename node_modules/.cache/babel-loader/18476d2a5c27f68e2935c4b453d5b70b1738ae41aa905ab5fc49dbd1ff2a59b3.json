{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\edusports\\\\fe\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case 'AUTH_LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    const token = localStorage.getItem('accessToken');\n    console.log('Checking auth with token:', token ? 'Token exists' : 'No token');\n    if (!token) {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      return;\n    }\n    try {\n      const response = await authService.getAccount();\n      console.log('Account response:', response);\n      if (response && response.data) {\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: {\n            user: response.data\n          }\n        });\n      } else if (response && response.success && response.data) {\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: {\n            user: response.data\n          }\n        });\n      } else {\n        console.log('Invalid response format:', response);\n        localStorage.removeItem('accessToken');\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: 'Invalid token response'\n        });\n      }\n    } catch (error) {\n      var _error$response;\n      console.log('Auth check failed:', error);\n      // Don't remove token immediately, might be network issue\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        localStorage.removeItem('accessToken');\n      }\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: error.message\n      });\n    }\n  };\n  const login = async credentials => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await authService.login(credentials);\n      console.log('Full login response:', response);\n\n      // Backend returns: { success: true, message: \"...\", data: { accessToken: \"...\", user: {...} } }\n      let accessToken, user;\n      if (response && response.success && response.data) {\n        // Standard backend format\n        accessToken = response.data.accessToken;\n        user = response.data.user;\n        console.log('Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n        console.log('Extracted user:', user);\n      } else if (response && response.data && response.data.accessToken) {\n        // Alternative format: { data: { accessToken, user } }\n        accessToken = response.data.accessToken;\n        user = response.data.user;\n      } else if (response && response.accessToken) {\n        // Direct format: { accessToken, user }\n        accessToken = response.accessToken;\n        user = response.user;\n      } else {\n        console.error('Invalid login response format:', response);\n        throw new Error('Invalid login response format');\n      }\n      if (!accessToken) {\n        console.error('No access token found in response');\n        throw new Error('No access token received');\n      }\n      if (!user) {\n        console.error('No user data found in response');\n        throw new Error('No user data received');\n      }\n      console.log('✅ Storing token and user data...');\n      localStorage.setItem('accessToken', accessToken);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user\n        }\n      });\n      console.log('✅ Login successful, user authenticated');\n      return response;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('❌ Login error:', error);\n      console.error('❌ Error response:', error.response);\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message\n      });\n      throw error;\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await authService.register(userData);\n      return response;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message\n      });\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('accessToken');\n      dispatch({\n        type: 'AUTH_LOGOUT'\n      });\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    checkAuth\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","initialState","user","isAuthenticated","isLoading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","checkAuth","token","localStorage","getItem","console","log","response","getAccount","data","success","removeItem","_error$response","status","message","login","credentials","accessToken","Error","setItem","_error$response2","_error$response2$data","register","userData","_error$response3","_error$response3$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/edusports/fe/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services';\n\nconst AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null,\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return { ...state, isLoading: true, error: null };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case 'AUTH_LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    const token = localStorage.getItem('accessToken');\n    console.log('Checking auth with token:', token ? 'Token exists' : 'No token');\n    \n    if (!token) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      return;\n    }\n\n    try {\n      const response = await authService.getAccount();\n      console.log('Account response:', response);\n      \n      if (response && response.data) {\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: { user: response.data },\n        });\n      } else if (response && response.success && response.data) {\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: { user: response.data },\n        });\n      } else {\n        console.log('Invalid response format:', response);\n        localStorage.removeItem('accessToken');\n        dispatch({ type: 'AUTH_FAILURE', payload: 'Invalid token response' });\n      }\n    } catch (error) {\n      console.log('Auth check failed:', error);\n      // Don't remove token immediately, might be network issue\n      if (error.response?.status === 401) {\n        localStorage.removeItem('accessToken');\n      }\n      dispatch({ type: 'AUTH_FAILURE', payload: error.message });\n    }\n  };\n\n  const login = async (credentials) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      const response = await authService.login(credentials);\n      console.log('Full login response:', response);\n      \n      // Backend returns: { success: true, message: \"...\", data: { accessToken: \"...\", user: {...} } }\n      let accessToken, user;\n      \n      if (response && response.success && response.data) {\n        // Standard backend format\n        accessToken = response.data.accessToken;\n        user = response.data.user;\n        console.log('Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n        console.log('Extracted user:', user);\n      } else if (response && response.data && response.data.accessToken) {\n        // Alternative format: { data: { accessToken, user } }\n        accessToken = response.data.accessToken;\n        user = response.data.user;\n      } else if (response && response.accessToken) {\n        // Direct format: { accessToken, user }\n        accessToken = response.accessToken;\n        user = response.user;\n      } else {\n        console.error('Invalid login response format:', response);\n        throw new Error('Invalid login response format');\n      }\n      \n      if (!accessToken) {\n        console.error('No access token found in response');\n        throw new Error('No access token received');\n      }\n      \n      if (!user) {\n        console.error('No user data found in response');\n        throw new Error('No user data received');\n      }\n      \n      console.log('✅ Storing token and user data...');\n      localStorage.setItem('accessToken', accessToken);\n      \n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user },\n      });\n      \n      console.log('✅ Login successful, user authenticated');\n      return response;\n    } catch (error) {\n      console.error('❌ Login error:', error);\n      console.error('❌ Error response:', error.response);\n      dispatch({ type: 'AUTH_FAILURE', payload: error.response?.data?.message || error.message });\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      const response = await authService.register(userData);\n      return response;\n    } catch (error) {\n      dispatch({ type: 'AUTH_FAILURE', payload: error.response?.data?.message || error.message });\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('accessToken');\n      dispatch({ type: 'AUTH_LOGOUT' });\n    }\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    checkAuth,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/E,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,MAAMQ,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,eAAe,EAAE,KAAK;EACtBC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QAAE,GAAGF,KAAK;QAAEH,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACnD,KAAK,cAAc;MACjB,OAAO;QACL,GAAGE,KAAK;QACRL,IAAI,EAAEM,MAAM,CAACE,OAAO,CAACR,IAAI;QACzBC,eAAe,EAAE,IAAI;QACrBC,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGE,KAAK;QACRL,IAAI,EAAE,IAAI;QACVC,eAAe,EAAE,KAAK;QACtBC,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAEG,MAAM,CAACE;MAChB,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGH,KAAK;QACRL,IAAI,EAAE,IAAI;QACVC,eAAe,EAAE,KAAK;QACtBC,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGE,KAAK;QAAEH,SAAS,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAChD;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGnB,UAAU,CAACW,WAAW,EAAEL,YAAY,CAAC;EAE/DL,SAAS,CAAC,MAAM;IACdmB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjDC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEJ,KAAK,GAAG,cAAc,GAAG,UAAU,CAAC;IAE7E,IAAI,CAACA,KAAK,EAAE;MACVF,QAAQ,CAAC;QAAEL,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC;MACjD;IACF;IAEA,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMxB,WAAW,CAACyB,UAAU,CAAC,CAAC;MAC/CH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;MAE1C,IAAIA,QAAQ,IAAIA,QAAQ,CAACE,IAAI,EAAE;QAC7BT,QAAQ,CAAC;UACPL,IAAI,EAAE,cAAc;UACpBC,OAAO,EAAE;YAAER,IAAI,EAAEmB,QAAQ,CAACE;UAAK;QACjC,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIF,QAAQ,IAAIA,QAAQ,CAACG,OAAO,IAAIH,QAAQ,CAACE,IAAI,EAAE;QACxDT,QAAQ,CAAC;UACPL,IAAI,EAAE,cAAc;UACpBC,OAAO,EAAE;YAAER,IAAI,EAAEmB,QAAQ,CAACE;UAAK;QACjC,CAAC,CAAC;MACJ,CAAC,MAAM;QACLJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,QAAQ,CAAC;QACjDJ,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;QACtCX,QAAQ,CAAC;UAAEL,IAAI,EAAE,cAAc;UAAEC,OAAO,EAAE;QAAyB,CAAC,CAAC;MACvE;IACF,CAAC,CAAC,OAAOL,KAAK,EAAE;MAAA,IAAAqB,eAAA;MACdP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEf,KAAK,CAAC;MACxC;MACA,IAAI,EAAAqB,eAAA,GAAArB,KAAK,CAACgB,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;QAClCV,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;MACxC;MACAX,QAAQ,CAAC;QAAEL,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEL,KAAK,CAACuB;MAAQ,CAAC,CAAC;IAC5D;EACF,CAAC;EAED,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnChB,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAa,CAAC,CAAC;IAChC,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMxB,WAAW,CAACgC,KAAK,CAACC,WAAW,CAAC;MACrDX,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAAC;;MAE7C;MACA,IAAIU,WAAW,EAAE7B,IAAI;MAErB,IAAImB,QAAQ,IAAIA,QAAQ,CAACG,OAAO,IAAIH,QAAQ,CAACE,IAAI,EAAE;QACjD;QACAQ,WAAW,GAAGV,QAAQ,CAACE,IAAI,CAACQ,WAAW;QACvC7B,IAAI,GAAGmB,QAAQ,CAACE,IAAI,CAACrB,IAAI;QACzBiB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEW,WAAW,GAAG,gBAAgB,GAAG,UAAU,CAAC;QAClFZ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAElB,IAAI,CAAC;MACtC,CAAC,MAAM,IAAImB,QAAQ,IAAIA,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACQ,WAAW,EAAE;QACjE;QACAA,WAAW,GAAGV,QAAQ,CAACE,IAAI,CAACQ,WAAW;QACvC7B,IAAI,GAAGmB,QAAQ,CAACE,IAAI,CAACrB,IAAI;MAC3B,CAAC,MAAM,IAAImB,QAAQ,IAAIA,QAAQ,CAACU,WAAW,EAAE;QAC3C;QACAA,WAAW,GAAGV,QAAQ,CAACU,WAAW;QAClC7B,IAAI,GAAGmB,QAAQ,CAACnB,IAAI;MACtB,CAAC,MAAM;QACLiB,OAAO,CAACd,KAAK,CAAC,gCAAgC,EAAEgB,QAAQ,CAAC;QACzD,MAAM,IAAIW,KAAK,CAAC,+BAA+B,CAAC;MAClD;MAEA,IAAI,CAACD,WAAW,EAAE;QAChBZ,OAAO,CAACd,KAAK,CAAC,mCAAmC,CAAC;QAClD,MAAM,IAAI2B,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEA,IAAI,CAAC9B,IAAI,EAAE;QACTiB,OAAO,CAACd,KAAK,CAAC,gCAAgC,CAAC;QAC/C,MAAM,IAAI2B,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEAb,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CH,YAAY,CAACgB,OAAO,CAAC,aAAa,EAAEF,WAAW,CAAC;MAEhDjB,QAAQ,CAAC;QACPL,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAE;UAAER;QAAK;MAClB,CAAC,CAAC;MAEFiB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrD,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAOhB,KAAK,EAAE;MAAA,IAAA6B,gBAAA,EAAAC,qBAAA;MACdhB,OAAO,CAACd,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCc,OAAO,CAACd,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACgB,QAAQ,CAAC;MAClDP,QAAQ,CAAC;QAAEL,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAE,EAAAwB,gBAAA,GAAA7B,KAAK,CAACgB,QAAQ,cAAAa,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBX,IAAI,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsBP,OAAO,KAAIvB,KAAK,CAACuB;MAAQ,CAAC,CAAC;MAC3F,MAAMvB,KAAK;IACb;EACF,CAAC;EAED,MAAM+B,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnCvB,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAa,CAAC,CAAC;IAChC,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMxB,WAAW,CAACuC,QAAQ,CAACC,QAAQ,CAAC;MACrD,OAAOhB,QAAQ;IACjB,CAAC,CAAC,OAAOhB,KAAK,EAAE;MAAA,IAAAiC,gBAAA,EAAAC,qBAAA;MACdzB,QAAQ,CAAC;QAAEL,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAE,EAAA4B,gBAAA,GAAAjC,KAAK,CAACgB,QAAQ,cAAAiB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBf,IAAI,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBX,OAAO,KAAIvB,KAAK,CAACuB;MAAQ,CAAC,CAAC;MAC3F,MAAMvB,KAAK;IACb;EACF,CAAC;EAED,MAAMmC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAM3C,WAAW,CAAC2C,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOnC,KAAK,EAAE;MACd;MACAc,OAAO,CAACd,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACRY,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;MACtCX,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAc,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAMgC,KAAK,GAAG;IACZ,GAAGlC,KAAK;IACRsB,KAAK;IACLO,QAAQ;IACRI,MAAM;IACNzB;EACF,CAAC;EAED,oBACEhB,OAAA,CAACC,WAAW,CAAC0C,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA7B,QAAA,EAChCA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,EAAA,CAzIWF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA2IzB,OAAO,MAAMqC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGxD,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACkD,OAAO,EAAE;IACZ,MAAM,IAAIlB,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOkB,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}