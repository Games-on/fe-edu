{"ast":null,"code":"// src/services/newsService.js\nimport apiClient from './apiClient';\nimport { createFileUploadConfig } from './apiClient';\nconst API_BASE_PATH = '/api/v1/news';\nconst newsService = {\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      const response = await apiClient.get(API_BASE_PATH);\n      // Dựa trên ảnh chụp màn hình, API trả về một MẢNG TRỰC TIẾP trong response.data\n      if (Array.isArray(response.data)) {\n        return response.data; // <-- Trả về trực tiếp mảng tin tức\n      } else {\n        console.error(\"Unexpected API response structure for getAllNews:\", response.data);\n        // Trả về mảng rỗng nếu cấu trúc không đúng để tránh lỗi runtime\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Error fetching all news:\", error);\n      throw error;\n    }\n  },\n  // Get news by ID\n  getNewsById: async id => {\n    try {\n      const response = await apiClient.get(`${API_BASE_PATH}/${id}`);\n      // Giả định API chi tiết cũng trả về đối tượng tin tức trong thuộc tính 'data'\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  createNews: async newsData => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData);\n      return response.data; // Trả về data của response\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      throw error;\n    }\n  },\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\n      return response.data; // Trả về data của response\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Delete a news article\n  deleteNews: async id => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\n      return response.data; // Trả về data của response (ví dụ: thông báo xóa thành công)\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  uploadNewsAttachments: async (newsId, file, onUploadProgress) => {\n    try {\n      const formData = new FormData();\n      formData.append('files', file);\n      const config = createFileUploadConfig(onUploadProgress);\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\n      return response.data; // Trả về data của response\n    } catch (error) {\n      console.error(`Error uploading attachment for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n  getImageUrl: imageName => {\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\n  }\n};\nexport default newsService;","map":{"version":3,"names":["apiClient","createFileUploadConfig","API_BASE_PATH","newsService","getAllNews","response","get","Array","isArray","data","console","error","getNewsById","id","createNews","newsData","post","updateNews","put","deleteNews","delete","uploadNewsAttachments","newsId","file","onUploadProgress","formData","FormData","append","config","getImageUrl","imageName","process","env","REACT_APP_API_URL"],"sources":["/Users/lucas/Desktop/an/fe-edu/src/services/newsService.js"],"sourcesContent":["// src/services/newsService.js\nimport apiClient from './apiClient';\nimport { createFileUploadConfig } from './apiClient';\n\nconst API_BASE_PATH = '/api/v1/news';\n\nconst newsService = {\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      const response = await apiClient.get(API_BASE_PATH);\n      // Dựa trên ảnh chụp màn hình, API trả về một MẢNG TRỰC TIẾP trong response.data\n      if (Array.isArray(response.data)) {\n        return response.data; // <-- Trả về trực tiếp mảng tin tức\n      } else {\n        console.error(\"Unexpected API response structure for getAllNews:\", response.data);\n        // Trả về mảng rỗng nếu cấu trúc không đúng để tránh lỗi runtime\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Error fetching all news:\", error);\n      throw error;\n    }\n  },\n\n  // Get news by ID\n  getNewsById: async (id) => {\n    try {\n      const response = await apiClient.get(`${API_BASE_PATH}/${id}`);\n      // Giả định API chi tiết cũng trả về đối tượng tin tức trong thuộc tính 'data'\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  createNews: async (newsData) => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData);\n      return response.data; // Trả về data của response\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      throw error;\n    }\n  },\n\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\n      return response.data; // Trả về data của response\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Delete a news article\n  deleteNews: async (id) => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\n      return response.data; // Trả về data của response (ví dụ: thông báo xóa thành công)\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  uploadNewsAttachments: async (newsId, file, onUploadProgress) => {\n    try {\n      const formData = new FormData();\n      formData.append('files', file);\n\n      const config = createFileUploadConfig(onUploadProgress);\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\n      return response.data; // Trả về data của response\n    } catch (error) {\n      console.error(`Error uploading attachment for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n\n  getImageUrl: (imageName) => {\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\n  }\n};\n\nexport default newsService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}