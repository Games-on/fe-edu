{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Desktop/an/fe-edu/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services';\nimport { jwtDecode } from 'jwt-decode';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  // Bắt đầu với isLoading: true để chờ checkAuth\n  error: null\n};\nconst authReducer = (state, action) => {\n  console.log('DEBUG: AuthReducer - Action:', action.type, 'Payload:', action.payload);\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'AUTH_SUCCESS':\n      console.log('DEBUG: AuthReducer - AUTH_SUCCESS. New state:', {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case 'AUTH_FAILURE':\n      console.log('DEBUG: AuthReducer - AUTH_FAILURE. New state:', {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      });\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case 'AUTH_LOGOUT':\n      console.log('DEBUG: AuthReducer - AUTH_LOGOUT. New state:', {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      });\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      console.log('DEBUG: AuthReducer - SET_LOADING to:', action.payload);\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  var _state$user;\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const decodeUserFromToken = token => {\n    try {\n      var _decoded$roles;\n      const decoded = jwtDecode(token);\n      if (decoded.exp * 1000 < Date.now()) {\n        console.warn(\"AuthContext: Token expired. Logging out.\");\n        localStorage.removeItem('accessToken');\n        return null;\n      }\n      return {\n        id: decoded.id,\n        email: decoded.sub,\n        // 'sub' thường là username/email trong JWT\n        name: decoded.name || decoded.sub,\n        role: ((_decoded$roles = decoded.roles) === null || _decoded$roles === void 0 ? void 0 : _decoded$roles[0]) || 'USER' // Giả sử 'roles' là mảng trong JWT payload\n      };\n    } catch (e) {\n      console.error(\"AuthContext: Error decoding token or token invalid:\", e);\n      localStorage.removeItem('accessToken');\n      return null;\n    }\n  };\n  const checkAuth = async () => {\n    console.log('AuthContext: checkAuth initiated.');\n    const token = localStorage.getItem('accessToken');\n    if (!token) {\n      console.log('AuthContext: No accessToken found in localStorage. Dispatching AUTH_FAILURE.');\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: 'No token found'\n      });\n      return;\n    }\n    const decodedUser = decodeUserFromToken(token);\n    if (decodedUser) {\n      console.log('AuthContext: Token successfully decoded. User:', decodedUser);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: decodedUser\n        }\n      });\n      try {\n        console.log('AuthContext: Calling authService.getAccount() to verify session with backend.');\n        const response = await authService.getAccount(); // response.data is expected { success: true, data: { ...user } }\n\n        if (response && response.success && response.data) {\n          console.log('AuthContext: Backend verification successful. User data from API:', response.data);\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: {\n              user: response.data\n            }\n          });\n        } else {\n          console.warn('AuthContext: Backend verification failed or invalid response from getAccount(). Logging out.');\n          localStorage.removeItem('accessToken');\n          dispatch({\n            type: 'AUTH_FAILURE',\n            payload: 'Backend session verification failed.'\n          });\n        }\n      } catch (apiError) {\n        var _apiError$response, _apiError$response2;\n        console.error('AuthContext: API error during checkAuth (getAccount):', apiError);\n        if (((_apiError$response = apiError.response) === null || _apiError$response === void 0 ? void 0 : _apiError$response.status) === 401 || ((_apiError$response2 = apiError.response) === null || _apiError$response2 === void 0 ? void 0 : _apiError$response2.status) === 403) {\n          console.log('AuthContext: 401/403 Unauthorized/Forbidden. Removing token.');\n          localStorage.removeItem('accessToken');\n          dispatch({\n            type: 'AUTH_FAILURE',\n            payload: 'Session expired or invalid. Please log in again.'\n          });\n          toast.error('Your session has expired. Please log in again.');\n        } else {\n          console.error('AuthContext: Network or other API error. Could not verify session with server.');\n          dispatch({\n            type: 'AUTH_FAILURE',\n            payload: apiError.message || 'Failed to verify session with server.'\n          });\n          toast.error('Could not verify session with server. Please check your internet connection.');\n        }\n      } finally {\n        // Đảm bảo isLoading luôn được đặt về false sau khi checkAuth hoàn tất\n        console.log('AuthContext: checkAuth process finished. Setting isLoading to false.');\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    } else {\n      console.log('AuthContext: Decoded token is invalid or expired. Dispatching AUTH_FAILURE.');\n      localStorage.removeItem('accessToken');\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: 'Invalid or expired token.'\n      });\n    }\n  };\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      console.log('AuthContext: Attempting login for credentials:', credentials.email);\n      // Assuming authService.login() returns { success: true, message: \"...\", data: { user: {...}, accessToken: \"...\" } }\n      const response = await authService.login(credentials);\n      console.log('DEBUG: AuthContext login - Raw response from authService.login():', response);\n      if (!response || !response.success || !response.data) {\n        console.error('❌ AuthContext login: Invalid API response structure received.', response);\n        throw new Error((response === null || response === void 0 ? void 0 : response.message) || 'Login failed: Invalid response format.');\n      }\n      const accessToken = response.data.accessToken;\n      const user = response.data.user;\n      if (!accessToken) {\n        console.error('❌ AuthContext login: No access token found in response.data.accessToken:', response.data);\n        throw new Error('No access token received from login.');\n      }\n      if (!user) {\n        console.error('❌ AuthContext login: No user data found in response.data.user:', response.data);\n        throw new Error('No user data received from login.');\n      }\n      console.log('✅ AuthContext login: Storing accessToken in localStorage. Token:', accessToken.substring(0, 30) + '...');\n      localStorage.setItem('accessToken', accessToken);\n      console.log('✅ AuthContext login: Dispatching AUTH_SUCCESS with user:', user);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user\n        }\n      });\n      toast.success(response.message || 'Login successful!');\n      return response;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('❌ AuthContext login: Error during login process:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'An unknown error occurred during login.';\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      console.log('AuthContext: Attempting registration.');\n      const response = await authService.register(userData);\n      console.log('✅ AuthContext register: Registration successful:', response);\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      }); // Registration doesn't automatically login here\n      toast.success(response.message || 'Registration successful! Please log in.');\n      return response;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('❌ AuthContext register: Registration failed:', error);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Registration failed.';\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    console.log('AuthContext: Starting logout process.');\n    try {\n      await authService.logout();\n      console.log('AuthContext: Backend logout API called successfully.');\n    } catch (error) {\n      console.error('❌ AuthContext logout: Backend logout API failed, but proceeding with client-side logout:', error);\n    } finally {\n      localStorage.removeItem('accessToken');\n      dispatch({\n        type: 'AUTH_LOGOUT'\n      });\n      toast.success('You have been logged out.');\n      console.log('AuthContext: Client-side logout complete. Token removed.');\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    isAdmin: ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === 'ADMIN'\n  };\n  if (state.isLoading) {\n    console.log('AuthContext: Rendering LoadingSpinner because isLoading is true.');\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 12\n    }, this);\n  }\n  console.log('AuthContext: Rendering children. Current isAuthenticated:', state.isAuthenticated, 'Current user:', state.user);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jwtDecode","LoadingSpinner","toast","jsxDEV","_jsxDEV","AuthContext","initialState","user","isAuthenticated","isLoading","error","authReducer","state","action","console","log","type","payload","AuthProvider","children","_s","_state$user","dispatch","decodeUserFromToken","token","_decoded$roles","decoded","exp","Date","now","warn","localStorage","removeItem","id","email","sub","name","role","roles","e","checkAuth","getItem","decodedUser","response","getAccount","success","data","apiError","_apiError$response","_apiError$response2","status","message","login","credentials","Error","accessToken","substring","setItem","_error$response","_error$response$data","errorMessage","register","userData","_error$response2","_error$response2$data","logout","value","isAdmin","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/lucas/Desktop/an/fe-edu/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services';\nimport { jwtDecode } from 'jwt-decode';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true, // Bắt đầu với isLoading: true để chờ checkAuth\n  error: null,\n};\n\nconst authReducer = (state, action) => {\n  console.log('DEBUG: AuthReducer - Action:', action.type, 'Payload:', action.payload);\n  switch (action.type) {\n    case 'AUTH_START':\n      return { ...state, isLoading: true, error: null };\n    case 'AUTH_SUCCESS':\n      console.log('DEBUG: AuthReducer - AUTH_SUCCESS. New state:', { ...state, user: action.payload.user, isAuthenticated: true, isLoading: false, error: null });\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case 'AUTH_FAILURE':\n      console.log('DEBUG: AuthReducer - AUTH_FAILURE. New state:', { ...state, user: null, isAuthenticated: false, isLoading: false, error: action.payload });\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case 'AUTH_LOGOUT':\n      console.log('DEBUG: AuthReducer - AUTH_LOGOUT. New state:', { ...state, user: null, isAuthenticated: false, isLoading: false, error: null });\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n    case 'SET_LOADING':\n      console.log('DEBUG: AuthReducer - SET_LOADING to:', action.payload);\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  const decodeUserFromToken = (token) => {\n    try {\n      const decoded = jwtDecode(token);\n      if (decoded.exp * 1000 < Date.now()) {\n        console.warn(\"AuthContext: Token expired. Logging out.\");\n        localStorage.removeItem('accessToken');\n        return null;\n      }\n      return {\n        id: decoded.id,\n        email: decoded.sub, // 'sub' thường là username/email trong JWT\n        name: decoded.name || decoded.sub,\n        role: decoded.roles?.[0] || 'USER', // Giả sử 'roles' là mảng trong JWT payload\n      };\n    } catch (e) {\n      console.error(\"AuthContext: Error decoding token or token invalid:\", e);\n      localStorage.removeItem('accessToken');\n      return null;\n    }\n  };\n\n  const checkAuth = async () => {\n    console.log('AuthContext: checkAuth initiated.');\n    const token = localStorage.getItem('accessToken');\n\n    if (!token) {\n      console.log('AuthContext: No accessToken found in localStorage. Dispatching AUTH_FAILURE.');\n      dispatch({ type: 'AUTH_FAILURE', payload: 'No token found' });\n      return;\n    }\n\n    const decodedUser = decodeUserFromToken(token);\n\n    if (decodedUser) {\n      console.log('AuthContext: Token successfully decoded. User:', decodedUser);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user: decodedUser },\n      });\n\n      try {\n        console.log('AuthContext: Calling authService.getAccount() to verify session with backend.');\n        const response = await authService.getAccount(); // response.data is expected { success: true, data: { ...user } }\n\n        if (response && response.success && response.data) {\n          console.log('AuthContext: Backend verification successful. User data from API:', response.data);\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: { user: response.data },\n          });\n        } else {\n          console.warn('AuthContext: Backend verification failed or invalid response from getAccount(). Logging out.');\n          localStorage.removeItem('accessToken');\n          dispatch({ type: 'AUTH_FAILURE', payload: 'Backend session verification failed.' });\n        }\n      } catch (apiError) {\n        console.error('AuthContext: API error during checkAuth (getAccount):', apiError);\n        if (apiError.response?.status === 401 || apiError.response?.status === 403) {\n          console.log('AuthContext: 401/403 Unauthorized/Forbidden. Removing token.');\n          localStorage.removeItem('accessToken');\n          dispatch({ type: 'AUTH_FAILURE', payload: 'Session expired or invalid. Please log in again.' });\n          toast.error('Your session has expired. Please log in again.');\n        } else {\n          console.error('AuthContext: Network or other API error. Could not verify session with server.');\n          dispatch({ type: 'AUTH_FAILURE', payload: apiError.message || 'Failed to verify session with server.' });\n          toast.error('Could not verify session with server. Please check your internet connection.');\n        }\n      } finally {\n        // Đảm bảo isLoading luôn được đặt về false sau khi checkAuth hoàn tất\n        console.log('AuthContext: checkAuth process finished. Setting isLoading to false.');\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    } else {\n      console.log('AuthContext: Decoded token is invalid or expired. Dispatching AUTH_FAILURE.');\n      localStorage.removeItem('accessToken');\n      dispatch({ type: 'AUTH_FAILURE', payload: 'Invalid or expired token.' });\n    }\n  };\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const login = async (credentials) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      console.log('AuthContext: Attempting login for credentials:', credentials.email);\n      // Assuming authService.login() returns { success: true, message: \"...\", data: { user: {...}, accessToken: \"...\" } }\n      const response = await authService.login(credentials);\n\n      console.log('DEBUG: AuthContext login - Raw response from authService.login():', response);\n\n      if (!response || !response.success || !response.data) {\n        console.error('❌ AuthContext login: Invalid API response structure received.', response);\n        throw new Error(response?.message || 'Login failed: Invalid response format.');\n      }\n\n      const accessToken = response.data.accessToken;\n      const user = response.data.user;\n\n      if (!accessToken) {\n        console.error('❌ AuthContext login: No access token found in response.data.accessToken:', response.data);\n        throw new Error('No access token received from login.');\n      }\n      if (!user) {\n        console.error('❌ AuthContext login: No user data found in response.data.user:', response.data);\n        throw new Error('No user data received from login.');\n      }\n\n      console.log('✅ AuthContext login: Storing accessToken in localStorage. Token:', accessToken.substring(0, 30) + '...');\n      localStorage.setItem('accessToken', accessToken);\n\n      console.log('✅ AuthContext login: Dispatching AUTH_SUCCESS with user:', user);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user },\n      });\n\n      toast.success(response.message || 'Login successful!');\n      return response;\n    } catch (error) {\n      console.error('❌ AuthContext login: Error during login process:', error);\n      const errorMessage = error.response?.data?.message || error.message || 'An unknown error occurred during login.';\n      dispatch({ type: 'AUTH_FAILURE', payload: errorMessage });\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      console.log('AuthContext: Attempting registration.');\n      const response = await authService.register(userData);\n      console.log('✅ AuthContext register: Registration successful:', response);\n      dispatch({ type: 'SET_LOADING', payload: false }); // Registration doesn't automatically login here\n      toast.success(response.message || 'Registration successful! Please log in.');\n      return response;\n    } catch (error) {\n      console.error('❌ AuthContext register: Registration failed:', error);\n      const errorMessage = error.response?.data?.message || error.message || 'Registration failed.';\n      dispatch({ type: 'AUTH_FAILURE', payload: errorMessage });\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    console.log('AuthContext: Starting logout process.');\n    try {\n      await authService.logout();\n      console.log('AuthContext: Backend logout API called successfully.');\n    } catch (error) {\n      console.error('❌ AuthContext logout: Backend logout API failed, but proceeding with client-side logout:', error);\n    } finally {\n      localStorage.removeItem('accessToken');\n      dispatch({ type: 'AUTH_LOGOUT' });\n      toast.success('You have been logged out.');\n      console.log('AuthContext: Client-side logout complete. Token removed.');\n    }\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    isAdmin: state.user?.role === 'ADMIN',\n  };\n\n  if (state.isLoading) {\n    console.log('AuthContext: Rendering LoadingSpinner because isLoading is true.');\n    return <LoadingSpinner />;\n  }\n\n  console.log('AuthContext: Rendering children. Current isAuthenticated:', state.isAuthenticated, 'Current user:', state.user);\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}